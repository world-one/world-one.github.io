{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/webpack","result":{"data":{"markdownRemark":{"id":"3455ee80-d94a-5b65-a2c4-80b1aa44503a","html":"<h3 id=\"webpack\" style=\"position:relative;\"><a href=\"#webpack\" aria-label=\"webpack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>webpack</h3>\n<p>모듈 번들러<br>\n모듈은 각 리소스 파일이고, 번들은 웹팩 실행 후에 나오는 결과 파일이다.<br>\n여러 리소스를 사용자에게 전달하기 좋은 형태로 만들 수 있다.</p>\n<h4 id=\"웹팩이-필요한-이유\" style=\"position:relative;\"><a href=\"#%EC%9B%B9%ED%8C%A9%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"웹팩이 필요한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹팩이 필요한 이유</h4>\n<p>기존의 웹페이지와 다른 방식의 SPA, 즉 단일 페이지 애플리케이션은 수백의 자바스크립트 파일을 포함한다.<br>\n그렇기에 기존의 방식으로 무리가 있다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add webpack webpack-cli</code></pre></div>\n<h4 id=\"webpackconfigjs\" style=\"position:relative;\"><a href=\"#webpackconfigjs\" aria-label=\"webpackconfigjs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>webpack.config.js</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const path = requrie(&#39;path&#39;);\n\nmodule.exports = {\n  entry: &#39;./src/index.js&#39;, //입력 파일\n  output: {\n    filename: &#39;main.js&#39;,\n    path: path.resolve(__dirname, &#39;dist&#39;), //dist 폴더에 main.js 번들 파일을 생성\n  },\n  mode: &#39;production&#39;,\n  optimization: { minimize: [] },\n};</code></pre></div>\n<p>생성된 번들 파일은 전체가 즉시실행 함수로 묶여있다.<br>\n웹팩 런타임 코드가 상단에 추가된다.<br>\n내가 만든 코드는 즉시 실행함수의 매개 변수로 들어간다.</p>\n<h4 id=\"loader\" style=\"position:relative;\"><a href=\"#loader\" aria-label=\"loader permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>loader</h4>\n<p>모듈을 입력 받아서 원하는 형태로 변환 후 새로운 모듈을 출력해주는 함수</p>\n<ul>\n<li>babel-loader</li>\n<li>css-loader</li>\n<li>style-loader</li>\n<li>file-loader : 그대로 복사해서 dist 폴더에 복사본을 만든다.</li>\n<li>raw-loader : 내용을 자바스크립트 코드로 가져온다.</li>\n<li>\n<p>url-loader : 크기가 작은 이미지 파일만 번들 파일에 포함</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module: {\nrules: [\n{\n  test: /\\.(png|jpg|gif)$/,\n  use: [\n    {\n      loader: &#39;url-loader&#39;,\n      options: {\n        limit: 8192,\n      }\n...</code></pre></div>\n<p>fallback 옵션으로 크기가 큰 파일을 다른 로더가 처리할 수 있다. 따로 입력하지 않을 경우 file-loader가 처리한다.   </p>\n</li>\n</ul>\n<h4 id=\"plugin\" style=\"position:relative;\"><a href=\"#plugin\" aria-label=\"plugin permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>plugin</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add clean-webpack-plugin html-webpack-plugin</code></pre></div>\n<p>clean-webpack-plugin은 웹팩 실행시 dist 폴더를 정리한다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const { CleanWebpackPlugin } = require(&#39;clean-webpack-plugin&#39;);\nconst HtmlWebpackPlugin = require(&#39;html-webpack-plugin&#39;);\n\nmodule.exports = {\n  plugins: [\n    new CleanWebpackPlugin(), //dist 폴더 정리\n    new HtmlWebpackPlugin({ //index.html을 생성, 번들파일이 자동으로 추가된다.\n      template: &#39;./template/index.html&#39;, //기반으로 할 파일\n    });\n  ]\n}</code></pre></div>\n<ul>\n<li>\n<p>DefinePlugin : 문자열 대체</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;div&gt;{`버전 ${APP_VERSION}`}&lt;/div&gt;</code></pre></div>\n</li>\n</ul>\n<p>plugins: [\nnew webpack.DefinePlugin({\nAPP_VERSION: ‘“1.2.3”’,\nTEN: ‘10’\n});\n]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">- ProvidePlugin : 미리 설정한 모듈을 자동으로 등록</code></pre></div>\n<p>plugins: [\nnew webpack.ProvidePlugin({\nReact: ‘react’,\n$: ‘jquery’,\n});\n]</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","fields":{"slug":"/posts/webpack","tagSlugs":["/tag/webpack/","/tag/babel/"]},"frontmatter":{"date":"2020-08-02","description":"웹팩과 바벨 알아보기","tags":["webpack","babel"],"title":"webpack","socialImage":"/bg_work.jpg"}}},"pageContext":{"slug":"/posts/webpack"}}}