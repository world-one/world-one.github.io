{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/webpack-babel","result":{"data":{"markdownRemark":{"id":"8649b991-205e-5b65-84fa-cb4c6fbb7a63","html":"<h3 id=\"babel\" style=\"position:relative;\"><a href=\"#babel\" aria-label=\"babel permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>babel</h3>\n<p>입력과 출력이 모두 자바스크립트 코드다.   </p>\n<ul>\n<li>ES6를 ES5 코드로 변환</li>\n<li>리액트 JSX 문법 변환</li>\n<li>타입스크립트</li>\n<li>코드 압축</li>\n<li>실험적인 문법도 사용 가능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add \n  @babel/core\n  @babel/cli\n  @babel/plugin-transform-arrow-functions\n  @babel/plugin-transform-template-literals\n  @babel/preset-react</code></pre></div>\n<h5 id=\"babelcli로-실행하기\" style=\"position:relative;\"><a href=\"#babelcli%EB%A1%9C-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0\" aria-label=\"babelcli로 실행하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@babel/cli로 실행하기</h5>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//code.js\nconst element = &lt;div&gt;babel test&lt;/div&gt;; //JSX 문법\nconst text = `element type is ${element.type}`; //리터럴 문법\nconst add = (a, b) =&gt; a + b; //arrow function</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npx babel src/code.js \n  --presets=@babel/preset-react \n  --plugins=@babel/plugin-transform-template-literals,\n  @babel/plugin-transform-arrow-functions</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//변환 후\nconst element = React.createElement(&#39;div&#39;, null, &#39;babel test&#39;);\nconst text = &#39;element type is &#39;.concat(element.type);\nconst add = function (a, b) {\n  return a+b;\n};</code></pre></div>\n<ul>\n<li>babel config file\n바벨 6까지는 .babelrc 파일로 관리,<br>\n버전 7부터는 babel.config.js로 관리하는 걸 추천…?    </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const presets = [&#39;@babel/preset-react&#39;];\nconst plugins = [\n  &#39;@babel/plugin-transform-teamplate-literals&#39;,\n  &#39;@babel/plugin-transform-arrow-functions&#39;\n];\n\nmodule.exports = { presets, plugins };</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//실행\nnpx babel src/code.js\n\nnpx babel src/code.js --out-file dist.js\nnpm babel src --out-dir dist</code></pre></div>\n<h5 id=\"babel-loader\" style=\"position:relative;\"><a href=\"#babel-loader\" aria-label=\"babel loader permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>babel loader</h5>\n<p>웹팹의 babel-loader를 이용하여 실행   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add webpack webpack-cli babel-loader</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//webpack.config.js\nconst path = require(&#39;path&#39;)&#39;\n\nmodule.exports = {\n  entry: &#39;./src/code.js&#39;, //번들링할 파일 지정\n  output: {\n    path: path.resolve(__dirname, &#39;dist&#39;),\n    filename: &#39;code.bundle.js&#39;, //번들링 결과를 dist/code.bundle.js로 저장\n  },\n  module: {\n    rules: [ \n      { \n        test: /\\.js$/, \n        use: &#39;babel-loader&#39; //babel.config.js의 설정 파일이 사용된다.\n      }\n    ]\n  },\n  optimization: { minimizer: [] ,} //코드 압축 기능 해제\n};</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npx webpack</code></pre></div>\n<h5 id=\"babelcore를-이용하여-실행\" style=\"position:relative;\"><a href=\"#babelcore%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EC%8B%A4%ED%96%89\" aria-label=\"babelcore를 이용하여 실행 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@babel/core를 이용하여 실행</h5>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//runBabel.js\nconst babel = require(&#39;@babel/core&#39;);\nconst ffs = require(&#39;fs&#39;);\n\nconst filename = &#39;./src/code.js&#39;;\nconst source = fss.readFileSync(filename, &#39;utf8&#39;); //컴파일 할 파일\nconst presets = [&#39;@babel/preset-react&#39;];\nconst plugins = [\n  &#39;@babel/plugin-transform-teamplate-literals&#39;,\n  &#39;@babel/plugin-transform-arrow-functions&#39;,\n];\nconst { code } = babel.transformSync(source, { // transformSync 바벨 실행\n  filename,\n  presets,\n  plugins,\n  configFile: false, //babel.config.js 설정 파일을 사용하지 않는다.\n});\n\nconsole.log(code); //파일 저장은 fs 모듈을 이용</code></pre></div>\n<p>이 방법은 자유도가 높다.   </p>\n<p>바벨의 컴파일 단계</p>\n<ul>\n<li>파싱 단계 : 입력된 코드로부터 AST(abstract syntax tree) 생성</li>\n<li>변환 단계 : AST를 원하는 형태로 변환</li>\n<li>생성 단계 : AST를 코드로 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const { ast } = babel.transformSync(sources, { // 코드는 생성하지 않고 AST만 생성, 공통 부분만 추가 \n  filename,\n  ast: true,\n  code: false,\n  presets,\n  configFile: false,\n});\n\nconst { code: code1 } = babel.transformSync(ast, source, { // transformSync 바벨 실행\n  filename,  \n  plugins : [&#39;@babel/plugin-transform-teamplate-literals&#39;],\n  configFile: false, //babel.config.js 설정 파일을 사용하지 않는다.\n});\n\nconst { code: code2 } = babel.transformSync(ast, source, { // transformSync 바벨 실행\n  filename,\n  plugins: [&#39;@babel/plugin-transform-arrow-functions&#39;],\n  configFile: false, //babel.config.js 설정 파일을 사용하지 않는다.\n});</code></pre></div>\n<p>설정의 갯수가 많아질수록 효율이 높아지는 방식이라고 한다.    </p>\n<h5 id=\"확장성과-유연성\" style=\"position:relative;\"><a href=\"#%ED%99%95%EC%9E%A5%EC%84%B1%EA%B3%BC-%EC%9C%A0%EC%97%B0%EC%84%B1\" aria-label=\"확장성과 유연성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>확장성과 유연성</h5>\n<ul>\n<li>extends\n다른 설정 파일을 가져와서 확장할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//common/.babelrc\n{\n  &quot;presets&quot;: [&quot;@babel/preset-react&quot;],\n  &quot;plugins&quot;: [\n    [\n      &quot;@babel/plugin-transfrom-template-literals&quot;,\n      {\n        &quot;loose&quot;: true //concat 대신 + 연산자 사용\n      }\n    ]\n  ]\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//src/example-extends/.babelrc\n{\n  &quot;extends&quot;: &quot;../../common/.babelrc&quot;,\n  &quot;plugins&quot;: [\n    &quot;@babel/plugin-transform-arrow-functions&quot;,\n    &quot;@babel/plugin-transform-template-literals&quot;,\n  ]\n}</code></pre></div>\n<p>다른 파일의 설정을 가져온다. 기존 플러그인의 옵션은 사라지고 현재 파일의 옵션으로 적용된다.   </p>\n<ul>\n<li>\n<p>env 속성으로 환경별 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n....,\n&quot;env&quot;: {\n&quot;production&quot;: {\n  &quot;presets&quot;: [&quot;minify&quot;]\n}\n}\n}</code></pre></div>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//바벨 환경 설정\nprocess.env.BABEL_ENV || process.env.NODE_ENV || &quot;development&quot;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">MAC OS : NODE_ENV=production npx babel ./src/example-env\nWindow OS : set NODE_ENV=production &amp;&amp; npx babel ./src/example-env</code></pre></div>\n<ul>\n<li>\n<p>overrides 속성으로 파일별 설정</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n&quot;presets&quot;: [&quot;@babel/preset-react&quot;],\n&quot;plugins&quot;: [&quot;@babel/plugin-transform-template-literals&quot;],\n&quot;overrides&quot;: [ //파일별로 설정 가능\n{\n  &quot;include&quot;: &quot;./service1&quot;, //적용\n  &quot;excute&quot;: &quot;./service1/code2.js&quot;, //제외\n  &quot;plugins&quot;: [&quot;@babel/plugin-transform-arrow-functions&quot;]\n}\n]\n}</code></pre></div>\n</li>\n</ul>\n<h5 id=\"전체지역-설정\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4%EC%A7%80%EC%97%AD-%EC%84%A4%EC%A0%95\" aria-label=\"전체지역 설정 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체/지역 설정</h5>\n<ul>\n<li>\n<p>전체 설정</p>\n<ul>\n<li>root/babel.config.js</li>\n<li>root/package.json</li>\n</ul>\n</li>\n<li>\n<p>지역 설정</p>\n<ul>\n<li>src/directory/.babelrc</li>\n<li>src/directory/package.json(babel 설정이 있을 경우)</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"core-js\" style=\"position:relative;\"><a href=\"#core-js\" aria-label=\"core js permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>core-js</h5>\n<p>바벨에서 폴리필을 위해 공식적으로 제공<br>\n가장 간단한 방법은 자바스크립트 코드로 불러오는 것이다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import &#39;core-js&#39;;</code></pre></div>\n<p>이는 해당 모듈의 모든 폴리필을 포함한다.   </p>\n<p>웹팩에서 설정할 때는 아래와 같이 entry 속성에 추가해주면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exportss = {\n  entry: [&#39;core-js&#39;, &#39;./src/index.js&#39;],\n}</code></pre></div>\n<p>필요 없는 폴리필까지 번들에 포한되어 파일의 크기가 커진다.<br>\n만약 파일의 크기가 문제가 된다면 필요한 폴리필만 호출해서 사용한다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import &#39;core-js/features/promise&#39;;\nimport &#39;core-js/features/object/values&#39;;\nimport &#39;core-js/features/array/includes&#39;;</code></pre></div>\n<h5 id=\"babelpreset-env\" style=\"position:relative;\"><a href=\"#babelpreset-env\" aria-label=\"babelpreset env permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>@babel/preset-env</h5>\n<p>실행환경에 대한 정보를 설정하면 자동으로 필요한 기능을 주입해준다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//babel.config.js\nconst presets = [\n  [\n    &#39;@babel/preset-env&#39;,\n    {\n      targets: &#39;&gt; 0.25%, not dead&#39;, \n    },\n  ],\n];\n\nmodule.exports = { presets };</code></pre></div>\n<p>targets: ’> 0.25%, not dead’, : 시장점유율이 0.25% 이상이고 업데이트가 종료되지 않은 브라우저<br>\nbrowserslist라는 패키지의 문법   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const presets = [\n  [\n    &#39;@babel/preset-env&#39;,\n    {\n      targets: {\n        chrome: &#39;40&#39;,\n      },\n      useBuiltiIns: &#39;entry&#39;, // 폴리필과 관련된 설정, entry는 지원하는 브라우저에서 필요한 폴리필만 포함, \n                            //usage는 코드에서 사용된 기능의 폴리필만 불러옴\n      corejs: { version: 3, proposals: true }, //babel에게 corejs의 버전을 알려준다.\n    }\n  ]\n];</code></pre></div>\n<p>usage를 이용하덜라도 불필요한 폴리필을 불러오기도 하는데 이는 변수의 타입을 추론하지 못하기 때문이다.<br>\n그래서 보수적으로 폴리필을 추가하게 되는데, 이는 타입스크립트를 사용하면 해결된다.   </p>","fields":{"slug":"/posts/webpack-babel","tagSlugs":["/tag/webpack/","/tag/babel/"]},"frontmatter":{"date":"2020-08-01","description":"웹팩과 바벨 알아보기","tags":["webpack","babel"],"title":"babel","socialImage":"/bg_work.jpg"}}},"pageContext":{"slug":"/posts/webpack-babel"}}}