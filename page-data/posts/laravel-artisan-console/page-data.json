{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/laravel-artisan-console","result":{"data":{"markdownRemark":{"id":"8acba5f8-77e5-5f23-9f06-63289938e577","html":"<h3 id=\"routesconsolephp\" style=\"position:relative;\"><a href=\"#routesconsolephp\" aria-label=\"routesconsolephp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>routes/console.php</h3>\n<p>라라벨로 개발을 할때 api.php, web.php만 사용했다.<br>\nconsole.php, channels.php 이 두 파일은 console과 channels이란 이름으로 대충의 용도만 짐작했을 뿐이다.<br>\n오늘은 console 쪽을 실제로 써보면서 기록해보자.</p>\n<h3 id=\"artisan-tinker\" style=\"position:relative;\"><a href=\"#artisan-tinker\" aria-label=\"artisan tinker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>artisan tinker</h3>\n<p>tinker는 PsySH 패키지로 구동되는 REPL이다.<br>\nREPL은 Read-Eval-Print-Loop의 약자로 단일 입력을 받아 반환하는 대화식 쉘이라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">php artisan tinker\n\n&gt;&gt;&gt;inspire\nWaste no more time arguing what a good man should be, be one. - Marcus Aurelius\n\n&gt;&gt;&gt;down\n&gt;&gt;&gt;up</code></pre></div>\n<p>php artisan에서 사용할 수 있는 command 중 TinkerCommand의 whitelist에 들어있는 명령어는 바로 사용할 수 있다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">php artisan vendor:publish --provider=&quot;Laravel\\Tinker\\TinkerServiceProvider&quot;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&gt;&gt;&gt;DB::select(&#39;select * from users&#39;);\n=&gt; [\n     {#3036\n       +&quot;id&quot;: 4,\n       +&quot;name&quot;: &quot;jeong seil&quot;,\n       +&quot;email&quot;: &quot;jsi111@na.com&quot;,\n       +&quot;password&quot;: &quot;EHzXELUgfAFhcCUHRH16kkhMJ4YBMUxud4OGj4AOrP2OZXTYD3IONSkCs8FcMAPgZrxHEHALiwHg+84zKFRQxA==&quot;,\n       +&quot;remember_token&quot;: null,\n       +&quot;created_at&quot;: null,\n       +&quot;updated_at&quot;: null,\n     },\n     {#3037\n       +&quot;id&quot;: 5,\n       +&quot;name&quot;: &quot;jeong seil&quot;,\n       +&quot;email&quot;: &quot;jsi111111@na.com&quot;,\n       +&quot;password&quot;: &quot;EHzXELUgfAFhcCUHRH16kkhMJ4YBMUxud4OGj4AOrP2OZXTYD3IONSkCs8FcMAPgZrxHEHALiwHg+84zKFRQxA==&quot;,\n       +&quot;remember_token&quot;: null,\n       +&quot;created_at&quot;: null,\n       +&quot;updated_at&quot;: null,\n     },\n   ]</code></pre></div>\n<p>laravel의 DB 파사드를 이용하여 데이터를 가져올 수 있다.<br>\n아래는 쿼리빌더를 이용한 것으로 결과는 같다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">DB::table(&#39;users&#39;)-&gt;get();</code></pre></div>\n<h3 id=\"artisan-명령어-생성\" style=\"position:relative;\"><a href=\"#artisan-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%83%9D%EC%84%B1\" aria-label=\"artisan 명령어 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>artisan 명령어 생성</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">php artisan make:command SendEmails</code></pre></div>\n<p>app/Console/Commands/SendEmails.php 파일이 생성된다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> protected $signature = &#39;email:send {user}&#39;;\n protected $description = &#39;send email&#39;;\n  public function handle()\n  {\n      //\n      echo &quot;아직은 못보내요! &quot;.$this-&gt;argument(&#39;user&#39;).&quot;\\n&quot;;\n  }</code></pre></div>\n<p>내용을 간단히 입력하고 Kernel.php 파일에 추가해주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  protected $commands = [\n        //\n        Commands\\SendEmails::class\n    ];\n\n$php artisan\n email\n  email:send           send email\n\n$php artisan email:send jsi\n아직은 못보내요! jsi</code></pre></div>\n<p>리스트에 위와 같이 명령어가 추가되어 있으면 기존 명령어와 같이 사용된다.</p>\n<h3 id=\"routesconsolephp-1\" style=\"position:relative;\"><a href=\"#routesconsolephp-1\" aria-label=\"routesconsolephp 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>routes/console.php??</h3>\n<p>Class로 정의하는 위 방식 대신 클로저 기반 명령어를 만들 수 있는 곳이다.<br>\nArtisan::command를 통해 명령어를 쉽게 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Artisan::command(&#39;desc:console {desc}&#39;, function ($desc) {\n    echo $desc.&quot;\\n&quot;;\n})-&gt;describe(&#39;text print&#39;);\n\n$php artisan \n desc\n  desc:console         text print\n\n$php artisan desc:console &#39;클래스 말고 클로저 기반&#39;\n클래스 말고 클로저 기반</code></pre></div>\n<h3 id=\"argument-option\" style=\"position:relative;\"><a href=\"#argument-option\" aria-label=\"argument option permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>argument, option</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">protected $signature = &#39;email:send {user}&#39;;\nprotected $signature = &#39;email:send {user?}&#39;;\nprotected $signature = &#39;email:send {user=foo}&#39;;</code></pre></div>\n<p>필수로 받거나 선택적으로 받을 수 있으면 기본값도 설정할 수 있다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">protected $signature = &#39;email:send {user} {--queue}&#39;;\nprotected $signature = &#39;email:send {user} {--queue=}&#39;;\nprotected $signature = &#39;email:send {user} {--queue=default}&#39;;</code></pre></div>\n<p>옵션값이 들어가면 true, 없으면 false가 된다.<br>\n옵션값을 지정해야하는 경우는 ’=‘을 붙인다.<br>\n기본값을 지정할 수 있다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">email:send {user} {--Q|queue}</code></pre></div>\n<p>옵션의 단축키를 지정할 수 있다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">email:send {user*}\nemail:send {user} {--id=*}\n$php artisan email:send foo --id=1 --id=2</code></pre></div>\n<p>인자값과 옵션을 배열로 받을 수 있다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$userId = $this-&gt;argument(&#39;user&#39;);\n$queueName = $this-&gt;option(&#39;queue&#39;);</code></pre></div>\n<p>값을 받는 방법이다. 배열일 경우 파라미터를 넣지 않으면 된다.</p>\n<h3 id=\"입력-설명\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5-%EC%84%A4%EB%AA%85\" aria-label=\"입력 설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력 설명</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">protected $signature = &#39;email:send\n                        {user : The ID of the user}\n                        {--queue= : Whether the job should be queued}&#39;;</code></pre></div>\n<h3 id=\"입력-프롬프트\" style=\"position:relative;\"><a href=\"#%EC%9E%85%EB%A0%A5-%ED%94%84%EB%A1%AC%ED%94%84%ED%8A%B8\" aria-label=\"입력 프롬프트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>입력 프롬프트</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">public function handle()\n{\n  $name = $this-&gt;ask(&#39;What is your name?&#39;);\n  $password = $this-&gt;secret(&#39;What is the password?&#39;);\n\n  if ($this-&gt;confirm(&#39;Do you wish to continue?&#39;)) {\n    //\n  }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$name = $this-&gt;anticipate(&#39;What is your name?&#39;, [&#39;Taylor&#39;, &#39;Dayle&#39;]);\n$name = $this-&gt;anticipate(&#39;What is your name?&#39;, function ($input) {\n    // Return auto-completion options...\n});\n$name = $this-&gt;choice(&#39;What is your name?&#39;, [&#39;Taylor&#39;, &#39;Dayle&#39;], $defaultIndex);\n$name = $this-&gt;choice(\n    &#39;What is your name?&#39;,\n    [&#39;Taylor&#39;, &#39;Dayle&#39;], //선택항목\n    $defaultIndex, //선택하지 않을때 기본값\n    $maxAttempts = null, //최대시도횟수\n    $allowMultipleSelections = false //다중선택가능여부\n);</code></pre></div>\n<h3 id=\"출력\" style=\"position:relative;\"><a href=\"#%EC%B6%9C%EB%A0%A5\" aria-label=\"출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>출력</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$this-&gt;info(&#39;Display this on the screen&#39;);\n$this-&gt;error(&#39;Something went wrong!&#39;);\n$this-&gt;line(&#39;Display this on the screen&#39;);</code></pre></div>\n<h4 id=\"테이블\" style=\"position:relative;\"><a href=\"#%ED%85%8C%EC%9D%B4%EB%B8%94\" aria-label=\"테이블 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>테이블</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$headers = [&#39;Name&#39;, &#39;Email&#39;];\n\n$users = App\\User::all([&#39;name&#39;, &#39;email&#39;])-&gt;toArray();\n\n$this-&gt;table($headers, $users);</code></pre></div>\n<h4 id=\"프로그래스바\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EC%8A%A4%EB%B0%94\" aria-label=\"프로그래스바 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래스바</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$users = App\\User::all();\n\n$bar = $this-&gt;output-&gt;createProgressBar(count($users));\n\n$bar-&gt;start();\n\nforeach ($users as $user) {\n    $this-&gt;performTask($user);\n\n    $bar-&gt;advance();\n}\n\n$bar-&gt;finish();</code></pre></div>\n<h3 id=\"다른-명령어-호출\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EB%AA%85%EB%A0%B9%EC%96%B4-%ED%98%B8%EC%B6%9C\" aria-label=\"다른 명령어 호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 명령어 호출</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> $this-&gt;call(&#39;email:send&#39;, [\n    &#39;user&#39; =&gt; 1, &#39;--queue&#39; =&gt; &#39;default&#39;\n  ]);\n\n  $this-&gt;callSilent(&#39;email:send&#39;, [\n    &#39;user&#39; =&gt; 1, &#39;--queue&#39; =&gt; &#39;default&#39;\n  ]);</code></pre></div>\n<p>다른 명령어를 호출할 경우 사용한다. 출력무시가 필요하다면 callSilent를 사용하자.</p>\n<h3 id=\"프로그래밍-방식\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EB%B0%A9%EC%8B%9D\" aria-label=\"프로그래밍 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래밍 방식</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Route::get(&#39;/foo&#39;, function () {\n    $exitCode = Artisan::call(&#39;email:send&#39;, [\n        &#39;user&#39; =&gt; 1, &#39;--queue&#39; =&gt; &#39;default&#39;\n    ]);\n});</code></pre></div>","fields":{"slug":"/posts/laravel-artisan-console","tagSlugs":["/tag/php/","/tag/laravel/","/tag/framework/"]},"frontmatter":{"date":"2020-05-13","description":"아티잔 콘솔 기능 어떻게, 그리고 어떤 용도로 사용되는가?","tags":["PHP","Laravel","framework"],"title":"Laravel Artisan Console","socialImage":"/bg_work.jpg"}}},"pageContext":{"slug":"/posts/laravel-artisan-console"}}}