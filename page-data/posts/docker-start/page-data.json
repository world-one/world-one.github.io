{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/docker-start","result":{"data":{"markdownRemark":{"id":"47565d4f-4f3f-5380-b8a9-b096ee6716cf","html":"<h3 id=\"docker\" style=\"position:relative;\"><a href=\"#docker\" aria-label=\"docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Docker</h3>\n<p>aws에 docker를 설치해보자!</p>\n<h3 id=\"docker-install\" style=\"position:relative;\"><a href=\"#docker-install\" aria-label=\"docker install permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker install</h3>\n<p><a href=\"https://docs.docker.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.docker.com/</a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl -s https://get.docker.com | sudo sh</code></pre></div>\n<p>도커에서 공식적으로 제공하는 스크립트라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker -v\nDocker version 19.03.8, build afacb8b7f0</code></pre></div>\n<p>위와 같이 현재 최고 버전이 설치되었다.</p>\n<p>설치된 패키지에서 docker라는 단어를 검색하면 아래와 같이 나온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">dpkg --get-selections | grep docker\n\ndocker-ce\ndocker-ce-cli   </code></pre></div>\n<p>docker 추가 목록</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/etc/apt/sources.list.d/docker.list</code></pre></div>\n<h3 id=\"docker-start\" style=\"position:relative;\"><a href=\"#docker-start\" aria-label=\"docker start permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>docker start</h3>\n<p>실행중인 컨테이너 보기</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker ps\n\nCONTAINER ID    IMAGE      COMMAND      CREATED      STATUS        PORTS       NAMES</code></pre></div>\n<p>물론 아직 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker pull ubuntu\n\nUsing default tag: latest\nlatest: Pulling from library/ubuntu\n5bed26d33875: Pull complete \nf11b29a9c730: Pull complete \n930bda195c84: Pull complete \n78bf9a5ad49e: Pull complete \nDigest: sha256:bec5a2727be7fff3d308193cfde3491f8fba1a2ba392b7546b43a051853a341d\nStatus: Downloaded newer image for ubuntu:latest\ndocker.io/library/ubuntu:latest</code></pre></div>\n<p>우분투 이미지를 받아보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker iamges\n\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nubuntu              latest              4e5021d210f6        4 weeks ago         64.2MB</code></pre></div>\n<p>도커 실행하기</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker run -it ubuntu:latest bash\nroot@1a5e137ff1b9:/#\nroot@1a5e137ff1b9:/# exit</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker ps\nCONTAINER ID    IMAGE      COMMAND      CREATED      STATUS        PORTS       NAMES\n\ndocker ps -a\nCONTAINER ID  IMAGE          COMMAND   CREATED        STATUS                    PORTS   NAMES\n1a5e137ff1b9  ubuntu:latest  &quot;bash&quot;    2 minutes ago  Exited (0) 4 seconds ago          heuristic_shirley</code></pre></div>\n<p>동작하지 않는 컨테이는 위 명령어로 볼 수 있다.   </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker start [CONTAINER ID]\ndocker restart [CONTAINER ID]</code></pre></div>\n<p>여기서 다시 셸에 들어가려면 attach를 이용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker attach [CONTAINER ID]</code></pre></div>\n<p>삭제 명령어</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker rm [CONTAINER ID]\ndocker rmi [image name]</code></pre></div>\n<p>image 생성\n우선 php, nginx, git을 설치해보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">apt update\napt install nginx\napt install php\napt install git</code></pre></div>\n<p>commit 명령어로 이미지를 생성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker commit cd5cc9c9249d ubuntu:nginx_php\nsha256:b6fb08e0011ffa27ef2d87b81274f38f3f87c3e5529912b6ef9276068b44db0f\n\ndocker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nubuntu              nginx_php           b6fb08e0011f        4 seconds ago       269MB\nubuntu              latest              4e5021d210f6        4 weeks ago         64.2MB</code></pre></div>\n<p>기존 이미지와는 별도로 새로운 이미지가 생성된다.</p>\n<p>일단 한번 돌려보고 싶어서 만들어진 이미지를 다운받아 실행해보겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker pull nginx\ndocker run -d -p 8181:80 nginx:latest</code></pre></div>\n<p>-d 옵션은 백그라운드로 실행, -p는 포트를 지정하는 옵션이다.<br>\n8181은 외부포트이고 80은 컨테이너 내부 포트이다.   </p>\n<p>aws에서 포트를 열어준 뒤 확인하니 문제없이 접속되었다.</p>\n<h3 id=\"로컬-환경-설치\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EC%BB%AC-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%B9%98\" aria-label=\"로컬 환경 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로컬 환경 설치</h3>\n<p>아마 로컬에서 만들고 dockerfile로 본서버에서 배포하는 듯??\nmac os에서 설치를 해보자. 관리를 위해 brew로 설치를 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install docker\ndocker ps\nCannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</code></pre></div>\n<p>에러가 뜨길래 뭔가 했더니, docker desktop이란 app을 따로 설치해야한다.<br>\ncask로 설치를 해보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew cask install docker</code></pre></div>\n<p>설치후 docker app을 실행시킨 후 명령어를 입력하니 동작한다.</p>\n<h3 id=\"dockerfile\" style=\"position:relative;\"><a href=\"#dockerfile\" aria-label=\"dockerfile permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dockerfile</h3>\n<p>dockerfile로 image를 만들 수 있다.<br>\n아마 이 file로 배포하는게 아닐까?? 싶은데…<br>\n그게 아니면 git처럼 docker hub에 올리는 방법도 있다.<br>\n비공개로 올리려면 비용이 든다…   </p>\n<p>기본적인 명령어는 아래와 같다.</p>\n<ul>\n<li>\n<p>FROM </p>\n<ul>\n<li>기반이 될 이미지</li>\n</ul>\n</li>\n<li>\n<p>ENV </p>\n<ul>\n<li>환경변수</li>\n<li>$[ ENV_ABC ]</li>\n</ul>\n</li>\n<li>RUN : 기반이 될 이미지위에서 명령어 실행</li>\n<li>COPY : 이미지에 추가될 파일들을 복사한다. </li>\n<li>WORKDIR : run, cmd, entrypoint가 실행될 폴더</li>\n<li>EXPOSE : port 설정</li>\n<li>ENTRYPOINT : 컨테이너가 시작될때 실행되는 명령어, 한번만 들어간다.</li>\n<li>CMD : ENTRYPOINT가 있다면 매개변수 넘겨주는 목적, 그 외에는 ENTRYPOINT와 비슷하게 사용</li>\n<li>\n<p>VOLUME : 컨테이너 밖 호스트에 저장, </p>\n<ul>\n<li>VOLUME [“/path/a”, “/path/b”]</li>\n<li>docker run -v 호스트 폴더:컨테이너 폴더</li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/posts/docker-start","tagSlugs":["/tag/docker/","/tag/linux/","/tag/open-source/"]},"frontmatter":{"date":"2020-04-21","description":"도커 사용해보기","tags":["Docker","Linux","Open source"],"title":"도커(docker) 써보기","socialImage":"/bg_work.jpg"}}},"pageContext":{"slug":"/posts/docker-start"}}}